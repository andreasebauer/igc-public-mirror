--- igc/gui/metrics_select.py	2025-10-31 00:00:00.000000000 +0000
+++ igc/gui/metrics_select.py	2025-11-01 00:00:00.000000000 +0000
@@ -14,6 +14,35 @@
           order by m.name
         """, (sim_id,))
 
+def list_metrics_grouped() -> List[Dict]:
+    """
+    Load metrics grouped into 6 groups using the DB view `metrics_group`.
+    Expected columns:
+      - group_label
+      - id            (metric id)
+      - name
+      - description
+      - outputtypes
+    Returns:
+      [ { "label": <group>,
+          "metrics":[{"id":..,"name":..,"desc":..,"out":..}, ...] }, ... ]
+    """
+    rows = []
+    with cx() as conn:
+        rows = fetchall_dict(conn, """
+          select group_label, id, name, description, outputtypes
+          from metrics_group
+          order by group_label, name
+        """)
+    groups: Dict[str, Dict] = {}
+    for r in rows:
+        glabel = r["group_label"]
+        g = groups.get(glabel)
+        if not g:
+            g = {"label": glabel, "metrics": []}
+            groups[glabel] = g
+        g["metrics"].append({"id": r["id"], "name": r["name"], "desc": r.get("description") or "", "out": r.get("outputtypes") or ""})
+    return [groups[k] for k in sorted(groups.keys())]
 
 def validate_selection(metric_ids:Sequence[int]) -> list[str]:
     errs = []
